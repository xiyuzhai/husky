[package]
name = "husky-trace-protocol"
version.workspace = true
edition = "2021"

[dependencies]
axum = { workspace = true, optional = true }
futures = { workspace = true, optional = true }
futures-util = { workspace = true, optional = true }
rustc-hash.workspace = true
sealed = { workspace = true, optional = true }
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
smallvec.workspace = true
thiserror = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
tokio-tungstenite = { workspace = true, optional = true }
tracing.workspace = true
# abstractions
shifted-unsigned-int = { workspace = true, features = ["serde"] }
serde-impl = { path = "../../abstractions/serde-impl" }
enum-class.workspace = true
notify-change = { path = "../../abstractions/notify-change" }
ui.workspace = true
vec-like.workspace = true
# kernel
husky-item-path-interface.workspace = true
# ki
husky-ki-repr-interface.workspace = true
# linket
husky-linket-impl.workspace = true
# protocols
husky-figure-zone-protocol.workspace = true
husky-token-protocol = { workspace = true, features = ["serde"] }
husky-value-protocol.workspace = true
husky-value.workspace = true
husky-visual-protocol.workspace = true
# utils
husky-io-utils.workspace = true
husky-print-utils.workspace = true
husky-websocket-utils = { path = "../../utils/husky-websocket-utils", features = [
    "serde_json"
] }

[dev-dependencies]
# protocol
husky-trace-protocol = { workspace = true, features = ["trivial"] }

[features]
mock = []
trivial = []
egui = []
message = []
client = [
    "message",
    "dep:thiserror",
    "dep:axum",
    "dep:futures",
    "dep:futures-util",
    "dep:tokio",
    "dep:tokio-tungstenite",
    "husky-websocket-utils/imgui_client"
]
server = [
    "message",
    "dep:thiserror",
    "dep:axum",
    "dep:futures",
    "dep:futures-util",
    "dep:tokio",
    "dep:tokio-tungstenite",
    "husky-websocket-utils/easy_server"
]
test_helpers = ["mock", "client", "server", "dep:sealed"]
